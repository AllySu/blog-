一. BFC

1. 什么是BFC

html里面元素分为块级元素、内联元素

Formatting Context指的是页面中的一块渲染区域，并有一套渲染规则

与块级元素对应的Formatting Context
BFC = Block Formatting Context 块级格式化上下文

与内联元素对应的Formatting Context  
IFC 
BFC是一个独立的渲染区域

BFC布局规则：

1. **内部**的Box会在垂直方向，一个接一个地放置。
2. Box垂直方向的距离由 margin 决定。属于同一个BFC的两个相邻Box的margin会发生重叠
3. 每个元素的margin box的左边， 与包含块border box的左边相接触(对于从左往右的格式化，否则相反)。即使存在浮动也是如此。
4. BFC的区域不会与float box重叠。(可通过这一规则，写自适应两栏布局)
5. BFC就是页面上的一个隔离的独立容器，容器里面的子元素不会影响到外面的元素。反之也如此。
6. 计算BFC的高度时，浮动元素也参与计算。(可通过这一规则使浮动的元素撑开父元素——清除内部浮动)
2. 哪些元素会生成BFC

根元素
float属性不为none (float的属性值为left或者right)
position为absolute或fixed
display为inline-block, table-cell, table-caption, flex, inline-flex
overflow不为visible(overflow为hidden、scroll、auto)
3. BFC布局的使用

(1) 自适应两栏布局

(2) 清除内部浮动


-----------------------------------------------------------------------------2019.02.22
利用BFC避免外边距折叠
BFC可能造成外边距折叠，也可以利用它来避免这种情况。BFC产生外边距折叠要满足一个条件：两个相邻元素要处于同一个BFC中。所以，
若两个相邻元素在不同的BFC中，就能避免外边距折叠。

改进前面的例子：

<div class="container">
    <p>Sibling 1</p>
    <p>Sibling 2</p>
    <p>Sibling 3</p>
</div>
对应的CSS：

.container {
  background-color: red;
  overflow: hidden;      /* creates a block formatting context */
}
p {
  background-color: lightgreen;
  margin: 10px 0;
}

结果和上面一样，由于外边距折叠，三个相邻P元素之间的垂直距离是10px，这是因为三个 p 标签都从属于同一个BFC。

修改第三个P元素，使之创建一个新的BFC：

<div class="container">
    <p>Sibling 1</p>
    <p>Sibling 2</p>
    <div class="newBFC">
        <p>Sibling 3</p>
    </div>
</div>


对应的CSS：

.container {
    background-color: red;
    overflow: hidden;       /* creates a block formatting context */
}
p {
    margin: 10px 0;
    background-color: lightgreen;
}
.newBFC {
    overflow: hidden;       /* creates new block formatting context */
}





BFC包含浮动
浮动元素是会脱离文档流的(绝对定位元素会脱离文档流)。如果一个没有高度或者height是auto的容器的子元素是浮动元素，则该容器的高度是不会被撑开的。
我们通常会利用伪元素(:after或者:before)来解决这个问题。BFC能包含浮动，也能解决容器高度不会被撑开的问题。


<div class="container">
    <div>Sibling</div>
    <div>Sibling</div>
</div>
CSS：

.container {
  background-color: green;
}
.container div {
  float: left;
  background-color: lightgreen;
  margin: 10px;
}
在上面这个例子中，容器没有任何高度，并且它包不住浮动子元素，容器的高度并不会被撑开。为解决这个问题，可以在容器中创建一个BFC：

.container {
    overflow: hidden; /* creates block formatting context */
    background-color: green;
}
.container div {
    float: left;
    background-color: lightgreen;
    margin: 10px;
}
现在容器可以包住浮动子元素，并且其高度会扩展至包住其子元素，在这个新的BFC中浮动元素又回归到页面的常规流之中了。




使用BFC避免文字环绕


在多列布局中使用BFC
