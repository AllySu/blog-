一般看JQuery插件里的写法是这样的

(function($) {
  //...
})(jQuery);

今天看到bootstrap的javascript组件是这样写的

!function( $ ){
  //...
}( window.jQuery );

为什么要在前面加一个 " ! " 呢？


我们都知道，函数的声明方式有这两种

function fnA(){alert('msg');} //声明式定义函数
var fnB = function(){alert('msg');} //函数赋值表达式定义函数

问题中出现的两个函数，都是匿名函数。通常，我们调用一个方法的方式就是 FunctionName()

但是，如果我们尝试为一个"定义函数" 末尾加上(),解析器是无法理解的。如

function msg(){
  alert('message');
}();   //解析器是无法理解的

定义函数的调用方式应该是 msg();

如果将函数体部分用()包裹起来就可以运行并且解析器是不报错的,如:

(function($) {
  //...
})(jQuery);

那为什么将函数体部分用()包裹起来就可以了呢？

原来，使用括号包裹定义函数体，解析器将会以函数表达式的方式去调用定义函数。也就是说，任何能将函数变成一个函数表达式的作法，
都可以使解析器正确的调用定义函数。而 ! 就是其中一个，而 + - || 都有这样的功能。



就是为了能省略一个字符……

// 这么写会报错，因为这是一个函数定义：
function() {}()

// 常见的（多了一对括号），调用匿名函数：
(function() {})()

// 但在前面加上一个布尔运算符（只多了一个感叹号），就是表达式了，将执行后面的代码，也就合法实现调用
!function() {}()
在前面加上~+-等一元操作符也可以。其实还有好几种符合都可以保证匿名函数声明完就立即执行。



分号是为了和前面的代码隔开，js可以用换行分隔代码，但是合并压缩多个js文件之后，换行符一般会被删掉，所以连在一起可能会出错，加上分号就保险了。
